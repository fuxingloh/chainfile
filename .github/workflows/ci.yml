name: CI

on:
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]

concurrency:
  group: '${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}'
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm turbo run build

  test_plan:
    name: Test [plan]
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.plan.outputs.result }}
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'

      - run: npm install -g turbo

      - id: plan
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const task = 'test';
            const child = require('node:child_process').spawnSync('npx', ['turbo', 'run', task, '--dry=json'], { maxBuffer: 100_000_000, encoding: 'utf-8' });
            return JSON.parse(child.stdout).tasks
              .filter((t) => t.task === task && t.command !== '<NONEXISTENT>')
              .map((t) => t.package);

  test_run:
    name: Test [run]
    needs: test_plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.test_plan.outputs.packages) }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm turbo run test --filter=${{ matrix.package }}

  lint_prettier:
    name: Lint [prettier]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm prettier --check .

  lint_eslint:
    name: Lint [eslint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'

      - run: corepack enable pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm turbo run lint
