{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://chainfile.org/schema.json",
  "title": "Chainfile",
  "description": "Chainfile defines the instructions on how to package complex blockchain nodes into a Container that can be easily deployed and managed on Container-capable platforms such as Kubernetes, Compose, and ECS.",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string"
    },
    "id": {
      "type": "string",
      "pattern": "^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}/.+$",
      "description": "CAIP-2 Extended ID that uniquely identifies this chainfile."
    },
    "caip2": {
      "type": "string",
      "pattern": "^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}$",
      "description": "CAIP-2 Chain ID of the blockchain network this chainfile is for."
    },
    "name": {
      "type": "string",
      "description": "Describes this chainfile.",
      "minLength": 1,
      "maxLength": 128
    },
    "env": {
      "$ref": "#/definitions/Env"
    },
    "containers": {
      "type": "object",
      "minProperties": 1,
      "maxProperties": 6,
      "patternProperties": {
        "^(?!chainfile)[a-z0-9][a-z0-9-]{0,28}[a-z0-9]$": {
          "$ref": "#/definitions/Container"
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["id", "caip2", "name", "containers"],
  "additionalProperties": false,
  "definitions": {
    "Env": {
      "type": "object",
      "maxProperties": 30,
      "patternProperties": {
        "^[a-zA-Z_]+[a-zA-Z0-9_]*$": {
          "$ref": "#/definitions/EnvFactory"
        }
      },
      "additionalProperties": false
    },
    "EnvFactory": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "RandomBytes"
            },
            "length": {
              "type": "number",
              "minimum": 1,
              "maximum": 256,
              "multipleOf": 1
            },
            "encoding": {
              "enum": ["hex", "base64", "base64url"]
            }
          },
          "required": ["type", "length", "encoding"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "Value"
            },
            "value": {
              "type": "string"
            }
          },
          "required": ["type", "value"],
          "additionalProperties": false
        }
      ]
    },
    "EnvReference": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "required": ["key"],
      "additionalProperties": false
    },
    "Container": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Source of the container image.",
          "format": "uri"
        },
        "endpoints": {
          "type": "object",
          "patternProperties": {
            "^(?!chainfile)[a-z0-9][a-z0-9-]{0,28}[a-z0-9]$": {
              "$ref": "#/definitions/ContainerEndpoint"
            }
          },
          "additionalProperties": false
        },
        "resources": {
          "type": "object",
          "description": "For placement of the node in a container cluster.",
          "properties": {
            "cpu": {
              "type": "number",
              "description": "CPU in vCPU (Virtual CPU Core, Relative). In multiples of 0.25, where 0.25 is 1/4 of a core.",
              "minimum": 0.25,
              "maximum": 16,
              "multipleOf": 0.25
            },
            "memory": {
              "type": "number",
              "description": "Memory in MiB (Mebibyte, Absolute). You are guaranteed to have this much memory available to your container.",
              "minimum": 64,
              "maximum": 122880,
              "multipleOf": 64
            }
          },
          "required": ["cpu", "memory"],
          "additionalProperties": false
        },
        "environment": {
          "type": "object",
          "maxProperties": 30,
          "patternProperties": {
            "^[a-zA-Z_]+[a-zA-Z0-9_]*$": {
              "oneOf": [{ "type": "string" }, { "$ref": "#/definitions/EnvReference" }]
            }
          },
          "additionalProperties": false
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumes": {
          "type": "object",
          "properties": {
            "persistent": {
              "$ref": "#/definitions/ContainerVolume"
            },
            "ephemeral": {
              "$ref": "#/definitions/ContainerVolume"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["image", "source", "endpoints", "resources"],
      "additionalProperties": false
    },
    "ContainerEndpoint": {
      "type": "object",
      "description": "Extension to ports, endpoints are used to expose the container to the outside world with a specific protocol for interfacing.",
      "oneOf": [
        {
          "$ref": "#/definitions/ContainerEndpointPort"
        },
        {
          "$ref": "#/definitions/ContainerEndpointHttpRest"
        },
        {
          "$ref": "#/definitions/ContainerEndpointHttpJsonRpc"
        }
      ]
    },
    "ContainerEndpointPort": {
      "type": "object",
      "properties": {
        "port": {
          "type": "number",
          "minimum": 1,
          "maximum": 65535,
          "multipleOf": 1
        }
      },
      "required": ["port"],
      "additionalProperties": false
    },
    "ContainerEndpointHttpRest": {
      "type": "object",
      "properties": {
        "port": {
          "type": "number",
          "minimum": 1,
          "maximum": 65535,
          "multipleOf": 1
        },
        "protocol": {
          "enum": ["HTTP REST", "HTTPS REST"]
        },
        "authorization": {
          "$ref": "#/definitions/ContainerEndpointHttpAuthorization"
        },
        "probes": {
          "type": "object",
          "properties": {
            "readiness": {
              "description": "Probe to determine if the container is ready to receive traffic.",
              "$ref": "#/definitions/ContainerEndpointHttpRestProbe"
            },
            "liveness": {
              "description": "Probe to determine if the container is alive. Where an application is running, but unable to make progress this is useful to determine if the container should be restarted.",
              "$ref": "#/definitions/ContainerEndpointHttpRestProbe"
            },
            "startup": {
              "description": "Probe to determine if the container has started. This is useful for containers that take a long time to start up as it will prevent containers from being prematurely marked as unhealthy.",
              "$ref": "#/definitions/ContainerEndpointHttpRestProbe"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["port", "protocol"],
      "additionalProperties": false
    },
    "ContainerEndpointHttpRestProbe": {
      "type": "object",
      "properties": {
        "method": {
          "enum": ["GET", "POST", "PUT", "PATCH", "DELETE", "HEAD", "OPTIONS", "TRACE"]
        },
        "path": {
          "type": "string"
        },
        "body": {
          "type": "object"
        },
        "match": {
          "type": "object",
          "properties": {
            "status": {
              "oneOf": [
                {
                  "type": "number",
                  "minimum": 100,
                  "maximum": 599,
                  "multipleOf": 1
                },
                {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "number",
                    "minimum": 100,
                    "maximum": 599,
                    "multipleOf": 1
                  }
                }
              ]
            },
            "body": {
              "$ref": "http://json-schema.org/draft-07/schema#"
            }
          },
          "required": ["status"]
        }
      },
      "required": ["method", "path", "match"],
      "additionalProperties": false
    },
    "ContainerEndpointHttpJsonRpc": {
      "type": "object",
      "properties": {
        "port": {
          "type": "number",
          "minimum": 1,
          "maximum": 65535,
          "multipleOf": 1
        },
        "protocol": {
          "enum": ["HTTP JSON-RPC 1.0", "HTTPS JSON-RPC 1.0", "HTTP JSON-RPC 2.0", "HTTPS JSON-RPC 2.0"]
        },
        "path": {
          "type": "string"
        },
        "authorization": {
          "$ref": "#/definitions/ContainerEndpointHttpAuthorization"
        },
        "probes": {
          "type": "object",
          "properties": {
            "readiness": {
              "description": "Probe to determine if the container is ready to receive traffic.",
              "$ref": "#/definitions/ContainerEndpointHttpJsonRpcProbe"
            },
            "liveness": {
              "description": "Probe to determine if the container is alive. Where an application is running, but unable to make progress this is useful to determine if the container should be restarted.",
              "$ref": "#/definitions/ContainerEndpointHttpJsonRpcProbe"
            },
            "startup": {
              "description": "Probe to determine if the container has started. This is useful for containers that take a long time to start up as it will prevent containers from being prematurely marked as unhealthy.",
              "$ref": "#/definitions/ContainerEndpointHttpJsonRpcProbe"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["port", "protocol"],
      "additionalProperties": false
    },
    "ContainerEndpointHttpJsonRpcProbe": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "params": {
          "oneOf": [
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        },
        "match": {
          "type": "object",
          "properties": {
            "result": {
              "$ref": "http://json-schema.org/draft-07/schema"
            }
          },
          "required": ["result"]
        }
      },
      "required": ["method", "params", "match"],
      "additionalProperties": false
    },
    "ContainerEndpointHttpAuthorization": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "HttpBasic"
            },
            "username": {
              "oneOf": [{ "type": "string" }, { "$ref": "#/definitions/EnvReference" }]
            },
            "password": {
              "oneOf": [{ "type": "string" }, { "$ref": "#/definitions/EnvReference" }]
            }
          },
          "required": ["type", "username", "password"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "const": "HttpBearer"
            },
            "token": {
              "oneOf": [{ "type": "string" }, { "$ref": "#/definitions/EnvReference" }]
            }
          },
          "required": ["type", "token"],
          "additionalProperties": false
        }
      ]
    },
    "ContainerVolume": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[1-9][0-9]*([MGT])$"
            },
            {
              "type": "object",
              "properties": {
                "initial": {
                  "type": "string",
                  "pattern": "^[1-9][0-9]*([MGT])$"
                },
                "from": {
                  "type": "string",
                  "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                  "description": "YYYY-MM-DD"
                },
                "growth": {
                  "type": "string",
                  "pattern": "^[1-9][0-9]*([MGT])$"
                },
                "rate": {
                  "enum": ["daily", "weekly", "monthly", "yearly"]
                }
              },
              "required": ["initial", "from", "growth", "rate"],
              "additionalProperties": false
            }
          ]
        }
      },
      "required": ["paths", "size"],
      "additionalProperties": false
    }
  }
}
